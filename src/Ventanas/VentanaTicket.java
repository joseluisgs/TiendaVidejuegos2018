/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import Ventas.LineaVenta;
import Ventas.Venta;
import java.awt.Desktop;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.net.URI;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import utilidades.Utilidad;

/**
 *
 * @author link
 */
public class VentanaTicket extends javax.swing.JFrame {
    Venta venta;
    /**
     * Creates new form VentanaTicket
     */
    
    public VentanaTicket(Venta venta) {
        this.venta = venta;
        initComponents();
        prepararVentana();
    }
    
    private void prepararVentana() {
        this.setTitle("impresión de Ticket");
        this.setLocationRelativeTo(null);
        //tienda.setSize(600, 400);
        this.setResizable(false);
        ponerIconos();
        //anterior.setVisible(false);
        this.tTicket.setText("");
        this.setVisible(true);  
        
        mostrarTicket();

    }
    
    private void ponerIconos() {
        Utilidad c = Utilidad.nuevaInstancia();
        Toolkit t = Toolkit.getDefaultToolkit();
        this.setIconImage(t.getImage(c.getPatImagenes()+"icono.png"));
        //Ponemos el icono como imagen label
        
        ImageIcon imageIcon = new ImageIcon(new ImageIcon(c.getPatImagenes()+"imprimir.png").getImage().getScaledInstance(25, 25, Image.SCALE_DEFAULT));
        this.bGuardar.setIcon(imageIcon);
       

    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tTicket = new javax.swing.JTextArea();
        bGuardar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Ticket de Compra");

        tTicket.setEditable(false);
        tTicket.setColumns(20);
        tTicket.setRows(5);
        jScrollPane1.setViewportView(tTicket);

        bGuardar.setText("Guardar e imprimir");
        bGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGuardarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 683, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(bGuardar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bGuardar))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGuardarActionPerformed
        // TODO add your handling code here:
        guardarFichero();
    }//GEN-LAST:event_bGuardarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaTicket.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bGuardar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea tTicket;
    // End of variables declaration//GEN-END:variables

    private void guardarFichero() {
        // Primero es obtener la ruta del fichero a guardar con un elemento de la interfaz
        JFileChooser elegirRuta = new JFileChooser();
        elegirRuta.setDialogTitle("Indica el nombre del Ticket"); 
        FileNameExtensionFilter filtroFichero=new FileNameExtensionFilter("TXT","txt");
        elegirRuta.setFileFilter(filtroFichero);
        int seleccion = elegirRuta.showSaveDialog(this);
        // Si pulsa guardar o aceptar
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            File fichero = elegirRuta.getSelectedFile();
            //System.out.println("fichero " + fichero.getAbsolutePath());
            escribirFichero(fichero, this.tTicket.getText());
            // guardamos el fichero como sabemos
            imprimirFichero(fichero);
            
        }
    }
    
    private void escribirFichero(File file, String texto) {
        File fichero = file; // no hace falta pero asi uso la funcion directa que vimos en clase
        PrintWriter f = null;
        try {
            //System.out.println("Escribiendo en el fichero:"+fichero.getAbsolutePath());
            f = new PrintWriter(new FileWriter(fichero));
            f.println(texto);             
        } catch (IOException e) {
            JOptionPane.showMessageDialog(null, e.getMessage(),"Error al salvar",JOptionPane.ERROR_MESSAGE);
        } finally {
           try {
           // Nuevamente aprovechamos el finally para 
           // asegurarnos que se cierra el fichero.
           if (f != null)
               f.close();
               JOptionPane.showMessageDialog(null, "Fichero: "+fichero.getName()+" guardado con éxito","Fichero guardado",JOptionPane.INFORMATION_MESSAGE);
           } catch (Exception e2) {
              JOptionPane.showMessageDialog(null, e2.getMessage(),"Error al salvar",JOptionPane.ERROR_MESSAGE);
           }
        }
    }

    private void imprimirFichero(File file) {
        Desktop app = Desktop.getDesktop();
        try{
            app.edit(file);
            //app.mail();
            //app.browse(new URI("https://www.google.es/search?q=uri"));
            //app.print(new File("prueba.txt"));
        }
        catch(Exception e)
        {
            System.err.println(e);
        }
    }

    private void mostrarTicket() {
        String sal="";
        sal+="TIENDA DE VIDEJUEGOS IFP VIRGEN\n";
        sal+="-------------------------------\n\n";
        sal+="VENTA: "+venta.getCodigo()+" realizada:"+venta.getFecha()+"\n";
        sal+="CLIENTE:"+venta.getSocio().getNombre()+"\n";
        sal+="E-MAIL:"+venta.getSocio().getCorreo()+"\n";
        sal+="\n\nPRODUCTOS:\n";
        sal+="-------------\n\n";
        for(LineaVenta l: venta.getLineas()){
            sal+="JUEGO: "+l.getJuego().getNombre()+"\t\tPRECIO: "+l.getPrecio()+"\tCANTIDAD: "+l.getCantidad()+
                    "\tTOTAL: "+(l.getPrecio()*l.getCantidad())+"€\n";
            
        }
        sal+="\n\n-----------------------\n";
        sal+="TOTAL VENTA:"+venta.getTotal()+"€";
        this.tTicket.setText(sal);
    }
}
