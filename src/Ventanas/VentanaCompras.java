/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import Ventas.LineaVenta;
import Ventas.Venta;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import productos.Juego;
import socios.Socio;
import utilidades.ConectorBD;
import utilidades.IconCellRenderer;
import utilidades.Utilidad;

/**
 *
 * @author link
 */
public class VentanaCompras extends javax.swing.JFrame implements TableModelListener {
    JFrame anterior = null;
    Socio socio = null;

    /**
     * Creates new form VentanaVentas
     */
    public VentanaCompras(JFrame anterior, Socio socio) {
        this.anterior = anterior;
        this.socio = socio;

        initComponents();
        prepararVentana();
    }
    private void prepararVentana() {
        this.setTitle("Gestión de Ventas");
        this.setLocationRelativeTo(null);
        //tienda.setSize(600, 400);
        this.setResizable(false);
        ponerIconos();
        anterior.setVisible(false);
        this.setVisible(true);  
        
        cargarSocio();
        rellenarTablaJuegos();
        
        prepararCarroCompra();
    }

    private void prepararCarroCompra() {
        // configueranos la tabla del carro
        
        tablaCarro.setDefaultRenderer(Object.class,new IconCellRenderer());
        tablaCarro.setRowHeight(60); // Altura de la tabla
        tablaCarro.setRowSelectionAllowed(true);
        tablaCarro.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        ((DefaultTableModel)tablaCarro.getModel()).setRowCount(0);
        this.tPrecioFinal.setText("0.0");
        this.bFinalizarCompra.setEnabled(false);
        
        // Para los eventos para actualizar el dato;
        ((DefaultTableModel)tablaCarro.getModel()).removeTableModelListener(this);
        
    }

    private void cargarSocio() {
        //Ponemos los datos del socio
        this.lNombreSocio.setText(this.socio.getNombre());
        this.lCorreoSocio.setText(this.socio.getCorreo());
        this.lTelefonoSocio.setText(this.socio.getTelefono());
        Utilidad c = Utilidad.nuevaInstancia();
        ImageIcon foto = new ImageIcon(new ImageIcon(c.getPathFotosSocios()+this.socio.getFoto()).getImage().getScaledInstance(60, 60, Image.SCALE_DEFAULT));
        this.lFotoSocio.setIcon(foto);
    }
    
    private void ponerIconos() {
        Utilidad c = Utilidad.nuevaInstancia();
        Toolkit t = Toolkit.getDefaultToolkit();
        this.setIconImage(t.getImage(c.getPatImagenes()+"icono.png"));
        //Ponemos el icono como imagen label
        
        ImageIcon imageIcon = new ImageIcon(new ImageIcon(c.getPatImagenes()+"buscar.png").getImage().getScaledInstance(25, 25, Image.SCALE_DEFAULT));
        this.bBsucarJuego.setIcon(imageIcon);
        
        imageIcon = new ImageIcon(new ImageIcon(c.getPatImagenes()+"añadir.png").getImage().getScaledInstance(25, 25, Image.SCALE_DEFAULT));
        this.bComprarJuego.setIcon(imageIcon);
        
        imageIcon = new ImageIcon(new ImageIcon(c.getPatImagenes()+"remover.png").getImage().getScaledInstance(25, 25, Image.SCALE_DEFAULT));
        this.bEliminarJuego.setIcon(imageIcon);
        
        imageIcon = new ImageIcon(new ImageIcon(c.getPatImagenes()+"pagar.png").getImage().getScaledInstance(25, 25, Image.SCALE_DEFAULT));
        this.bFinalizarCompra.setIcon(imageIcon);

    }
    
      private void cerrarVentana() {
        if(anterior instanceof VentanaLogin){
            int seleccion = JOptionPane.showConfirmDialog(null, "¿Realmente desea salir de la aplicacion?", "Salir", JOptionPane.YES_NO_OPTION);
        if (seleccion == JOptionPane.YES_OPTION){
            System.exit(0);
        }
        }else{
            anterior.setVisible(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lFotoSocio = new javax.swing.JLabel();
        lNombreSocio = new javax.swing.JLabel();
        lCorreoSocio = new javax.swing.JLabel();
        lTelefonoSocio = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tNombreJuego = new javax.swing.JTextField();
        bBsucarJuego = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaJuegos = new javax.swing.JTable();
        bComprarJuego = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaCarro = new javax.swing.JTable();
        bEliminarJuego = new javax.swing.JButton();
        bFinalizarCompra = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        tPrecioFinal = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gestión de Ventas");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Socio"));

        lNombreSocio.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lNombreSocio.setText("Nombre del Socio");

        lCorreoSocio.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lCorreoSocio.setText("Correo del socio");

        lTelefonoSocio.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        lTelefonoSocio.setText("Telefono socio");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lFotoSocio, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lNombreSocio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lCorreoSocio, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lTelefonoSocio, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(lFotoSocio, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(lNombreSocio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lCorreoSocio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lTelefonoSocio)))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Juegos"));

        jLabel1.setText("Buscar:");

        bBsucarJuego.setText("Buscar");
        bBsucarJuego.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBsucarJuegoActionPerformed(evt);
            }
        });

        tablaJuegos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Foto", "Nombre", "Distribuidor", "Precio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaJuegos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaJuegosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaJuegos);

        bComprarJuego.setText("Añadir al carro");
        bComprarJuego.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bComprarJuegoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tNombreJuego, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bBsucarJuego)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bComprarJuego)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bComprarJuego)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(tNombreJuego, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(bBsucarJuego))))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Carro de compra"));

        tablaCarro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Foto", "Nombre", "Precio", "Cantidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tablaCarro);

        bEliminarJuego.setText("Eliminar Juego");
        bEliminarJuego.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEliminarJuegoActionPerformed(evt);
            }
        });

        bFinalizarCompra.setText("Pagar y Finalizar");
        bFinalizarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFinalizarCompraActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel2.setText("Total:");

        tPrecioFinal.setEditable(false);
        tPrecioFinal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jLabel3.setText("€");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(bEliminarJuego)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tPrecioFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bFinalizarCompra)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bEliminarJuego)
                    .addComponent(bFinalizarCompra)
                    .addComponent(jLabel2)
                    .addComponent(tPrecioFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        this.cerrarVentana();
    }//GEN-LAST:event_formWindowClosing

    private void bComprarJuegoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bComprarJuegoActionPerformed
        // TODO add your handling code here:
        this.comprarJuego();
    }//GEN-LAST:event_bComprarJuegoActionPerformed

    private void bEliminarJuegoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEliminarJuegoActionPerformed
        // TODO add your handling code here:
        this.eliminarJuego();
    }//GEN-LAST:event_bEliminarJuegoActionPerformed

    private void tablaJuegosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaJuegosMouseClicked
        // TODO add your handling code here:
         if (evt.getClickCount() == 2) {
             this.comprarJuego();
         }
    }//GEN-LAST:event_tablaJuegosMouseClicked

    private void bBsucarJuegoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBsucarJuegoActionPerformed
        // TODO add your handling code here:
        this.rellenarTablaJuegos();
    }//GEN-LAST:event_bBsucarJuegoActionPerformed

    private void bFinalizarCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFinalizarCompraActionPerformed
        // TODO add your handling code here:
        this.finalizarVenta();
    }//GEN-LAST:event_bFinalizarCompraActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaCompras.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bBsucarJuego;
    private javax.swing.JButton bComprarJuego;
    private javax.swing.JButton bEliminarJuego;
    private javax.swing.JButton bFinalizarCompra;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lCorreoSocio;
    private javax.swing.JLabel lFotoSocio;
    private javax.swing.JLabel lNombreSocio;
    private javax.swing.JLabel lTelefonoSocio;
    private javax.swing.JTextField tNombreJuego;
    private javax.swing.JTextField tPrecioFinal;
    private javax.swing.JTable tablaCarro;
    private javax.swing.JTable tablaJuegos;
    // End of variables declaration//GEN-END:variables

    private void rellenarTablaJuegos() {
          // Limpiamos la tabla
        ((DefaultTableModel)tablaJuegos.getModel()).setRowCount(0);
        
// Para rellenar con las imagenes de los alumnos
        tablaJuegos.setDefaultRenderer(Object.class,new IconCellRenderer());
        tablaJuegos.setRowHeight(60); // Altura de la tabla
        tablaJuegos.setRowSelectionAllowed(true);
        tablaJuegos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        Utilidad c = Utilidad.nuevaInstancia();
        ImageIcon foto = null; // para las fotos
        DefaultTableModel tabla = (DefaultTableModel) tablaJuegos.getModel();
        // Consulatmos
        ArrayList<Juego> juegos = Juego.listaJuegos(this.tNombreJuego.getText());
        
        for (Juego s: juegos){
            foto = new ImageIcon(new ImageIcon(c.getPathFotosJuegos()+s.getFoto()).getImage().getScaledInstance(50, 50, Image.SCALE_DEFAULT));
            Object[] fila = new Object[4];
            fila[0] = new JLabel(foto);
            fila[1] = s.getNombre();
            fila[2] = s.getDistribuidor();
            fila[3] = s.getPrecio();
            tabla.addRow(fila);
        }
    }

    private void comprarJuego() {
        int indice = this.tablaJuegos.getSelectedRow();
        if(indice >=0){
            ((DefaultTableModel)tablaCarro.getModel()).removeTableModelListener(this);
            // añadimos el juego
            DefaultTableModel tabla = (DefaultTableModel) tablaCarro.getModel();
            Object[] fila = new Object[4];
            fila[0] = tablaJuegos.getValueAt(indice, 0);
            fila[1] = tablaJuegos.getValueAt(indice, 1);
            fila[2] = tablaJuegos.getValueAt(indice, 3);
            fila[3] = 1;
            tabla.addRow(fila);
        }
        actualizarTotal();
        // Permitimos los eventos sobre la tabla para cambiar cosas
        ((DefaultTableModel)tablaCarro.getModel()).addTableModelListener(this);
        this.bFinalizarCompra.setEnabled(true);

    }

    private void actualizarTotal() {
        float precioTotal=0;
        //Recorremos el carro
        for(int i=0; i<tablaCarro.getRowCount();i++){
            float precio = Float.parseFloat(tablaCarro.getValueAt(i, 2).toString())* 
                    Integer.parseInt(tablaCarro.getValueAt(i, 3).toString());
            precioTotal+=precio;
        }
        this.tPrecioFinal.setText(""+precioTotal);
    }

    private void eliminarJuego() {
        int indice = this.tablaCarro.getSelectedRow();
        if(indice >=0){
            ((DefaultTableModel)tablaCarro.getModel()).removeTableModelListener(this);
            // añadimos el juego
            DefaultTableModel tabla = (DefaultTableModel) tablaCarro.getModel();
            tabla.removeRow(indice);
            ((DefaultTableModel)tablaCarro.getModel()).addTableModelListener(this);
            if(this.tablaCarro.getRowCount()==0){
                this.bFinalizarCompra.setEnabled(false);
            }
        }
        actualizarTotal();
    }
    
    private void finalizarVenta(){
        // Finalizamos la venta
        // Primero es encontrar el nuevo codigo de la venta, que sera el maximo +1
        // Esto no es necesario si usamos en auto incfrement en mysql o mariaDB
        // Pero lo dejo por compatibilidad y no depender del motor
        int nVenta = buscarCodigoVenta();
        // Sacamos los datos
        float precio = Float.parseFloat(this.tPrecioFinal.getText());  
        Date d = new Date();
        SimpleDateFormat sf = new SimpleDateFormat("dd-MM-yy");
        String fecha = sf.format(d);
        
        // Ahora toca crear la venta
        Venta venta = new Venta(nVenta,socio, precio,fecha);
        // ahora vamos a procesar todas las lineas de venta
         for(int i=0; i<tablaCarro.getRowCount();i++){
             // buscamos el juego
            Juego juego = buscarJuego(tablaCarro.getValueAt(i, 1).toString(), tablaCarro.getValueAt(i, 2).toString());
             //LineaVenta linea 
            float precioUnitario = Float.parseFloat(tablaCarro.getValueAt(i, 2).toString());
            int cantidad = Integer.parseInt(tablaCarro.getValueAt(i, 3).toString());
            LineaVenta linea = new LineaVenta(venta,juego, precioUnitario, cantidad);
            venta.añadirLinea(linea);
            
         }
         // insertamos la venta (internamente inserta la líneas de venta)
         venta.insertarBD();
         // imrpimir ticket y limpiar venta en cualquier caso
         this.imprimirTicket(venta);
         
        
    }

    private int buscarCodigoVenta(){
        int nVenta=0;
        ConectorBD bd = ConectorBD.nuevaConexionBD();
        bd.abrirBD();
        ResultSet rs = bd.consultarBD("select max(nVenta) from ventas"); //podríamos sumarle el +1 en el max
        try {
            while(rs.next()){
                nVenta= rs.getInt(1)+1;
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Mensaje:"+ex.getMessage()+"\nEstado: "+ex.getSQLState()+"\nCodigo de error:"+ex.getErrorCode(),
                        "Error de consulta",JOptionPane.ERROR_MESSAGE);
        }
        bd.cerrarBD();
        return nVenta;
    }
    

    @Override
    public void tableChanged(TableModelEvent e) {
        actualizarTotal();
    }

    private Juego buscarJuego(String nombre, String precio) {
        Juego j = new Juego();
        ConectorBD bd = ConectorBD.nuevaConexionBD();
        bd.abrirBD();
        String consulta ="SELECT * FROM juegos WHERE nombre = '"+nombre+"' AND precio = '"+precio+"'";
        //System.out.println(consulta);
        ResultSet rs = bd.consultarBD(consulta);
        try {
            while(rs.next()){
                j.setCodigo(rs.getInt("NJuego"));
                j.setNombre(rs.getString("nombre"));
                j.setDistribuidor(rs.getString("distribuidor"));
                j.setPrecio(rs.getFloat("precio"));
                j.setFecha(rs.getString("fecha"));
                j.setFoto(rs.getString("foto"));
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Mensaje:"+ex.getMessage()+"\nEstado: "+ex.getSQLState()+"\nCodigo de error:"+ex.getErrorCode(),
                        "Error de consulta",JOptionPane.ERROR_MESSAGE);
        }
        
        bd.cerrarBD();
        return j;
    }
    
    private void imprimirTicket(Venta venta) {
        //Preguntamos si queremos cerrar
        int seleccion = JOptionPane.showConfirmDialog(null, "¿Quieres imprimir el recibo de compra?", "Imprimir Recibo", JOptionPane.YES_NO_OPTION);
        if (seleccion == JOptionPane.YES_OPTION){
            VentanaTicket ticket = new VentanaTicket(venta);
        }
        prepararCarroCompra();

    }


}
