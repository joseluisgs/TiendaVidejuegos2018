/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventanas;

import tiendavideojuegos.TablaJuegosModel;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.filechooser.FileNameExtensionFilter;
import productos.Juego;
import socios.Socio;
import utilidades.Utilidad;

/**
 *
 * @author link
 */
public class VentanaGestionJuegos extends javax.swing.JFrame {

    /**
     * Creates new form VentanaGestionSocios
     */
    
    private String iConoFoto ="";
    TablaJuegosModel tablaJuegosModel = new TablaJuegosModel();
    
    //private VentanaGestionSocios ventana=null;
    private VentanaPrincipal anterior=null;
    
    public VentanaGestionJuegos(VentanaPrincipal anterior) {
        this.anterior = anterior;
        initComponents();
        prepararVentana();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        bFoto = new javax.swing.JButton();
        lNSocio = new javax.swing.JLabel();
        lNombreJuego = new javax.swing.JLabel();
        lDistribuidorJuego = new javax.swing.JLabel();
        lTelefonoSocio = new javax.swing.JLabel();
        lFechaJuego = new javax.swing.JLabel();
        tNJuego = new javax.swing.JTextField();
        tNombreJuego = new javax.swing.JTextField();
        tPecioJuego = new javax.swing.JTextField();
        bLimpiar = new javax.swing.JButton();
        bSalvar = new javax.swing.JButton();
        bModificar = new javax.swing.JButton();
        bEliminar = new javax.swing.JButton();
        calendarFechaJuego = new com.toedter.calendar.JDateChooser();
        comboDistribuidor = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tBuscarNombre = new javax.swing.JTextField();
        bBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaJuegos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Ficha Juego"));

        bFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFotoActionPerformed(evt);
            }
        });

        lNSocio.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lNSocio.setText("Nº Juego:");

        lNombreJuego.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lNombreJuego.setText("Nombre:");

        lDistribuidorJuego.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lDistribuidorJuego.setText("Distribuidor:");

        lTelefonoSocio.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lTelefonoSocio.setText("Precio:");

        lFechaJuego.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lFechaJuego.setText("Fecha de alta:");

        tNJuego.setEditable(false);
        tNJuego.setBackground(new java.awt.Color(230, 230, 230));

        tNombreJuego.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tNombreJuegoKeyTyped(evt);
            }
        });

        tPecioJuego.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tPecioJuegoFocusLost(evt);
            }
        });
        tPecioJuego.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tPecioJuegoKeyTyped(evt);
            }
        });

        bLimpiar.setText("Limpiar");
        bLimpiar.setToolTipText("Limpia los datos del formulario");
        bLimpiar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        bLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bLimpiarActionPerformed(evt);
            }
        });

        bSalvar.setText("Salvar");
        bSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSalvarActionPerformed(evt);
            }
        });

        bModificar.setText("Modificar");
        bModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bModificarActionPerformed(evt);
            }
        });

        bEliminar.setText("Eliminar");
        bEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEliminarActionPerformed(evt);
            }
        });

        comboDistribuidor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nintendo", "Sony", "Microsoft", "Ubisoft", "EA Sport" }));

        jLabel2.setText("€");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(bFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lNSocio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lNombreJuego, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lDistribuidorJuego, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE)
                                .addComponent(lTelefonoSocio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(lFechaJuego, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(calendarFechaJuego, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tNombreJuego, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tNJuego, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(tPecioJuego, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2))
                            .addComponent(comboDistribuidor, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(104, 104, 104)
                        .addComponent(bLimpiar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bSalvar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bModificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bEliminar)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lNSocio)
                            .addComponent(tNJuego, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lNombreJuego)
                            .addComponent(tNombreJuego, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lDistribuidorJuego)
                            .addComponent(comboDistribuidor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tPecioJuego, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lTelefonoSocio)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lFechaJuego)
                            .addComponent(calendarFechaJuego, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(bFoto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bLimpiar)
                    .addComponent(bSalvar)
                    .addComponent(bModificar)
                    .addComponent(bEliminar))
                .addGap(38, 38, 38))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Lista de Juegos"));

        jLabel1.setText("Buscar por Nombre:\n");

        bBuscar.setText("Buscar");
        bBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBuscarActionPerformed(evt);
            }
        });

        tablaJuegos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tablaJuegos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaJuegosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaJuegos);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(157, 157, 157)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tBuscarNombre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bBuscar)
                .addContainerGap())
            .addComponent(jScrollPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tBuscarNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bBuscar)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        // Para cerrar
        cerrarVentana();
    }//GEN-LAST:event_formWindowClosed

    private void bLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bLimpiarActionPerformed
        // TODO add your handling code here:
        this.limpiarCampos();
    }//GEN-LAST:event_bLimpiarActionPerformed

    private void bFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFotoActionPerformed
        // TODO add your handling code here:
        this.seleccionarFotoJuego();
    }//GEN-LAST:event_bFotoActionPerformed

    private void bBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBuscarActionPerformed
        // TODO add your handling code here:
        cargarTablaJuegos(this.tBuscarNombre.getText());
    }//GEN-LAST:event_bBuscarActionPerformed

    private void tNombreJuegoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tNombreJuegoKeyTyped
        // TODO add your handling code here:
        activarBotonesNuevo();
    }//GEN-LAST:event_tNombreJuegoKeyTyped

    private void tablaJuegosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaJuegosMouseClicked
        // TODO add your handling code here:
        int fila= this.tablaJuegos.getSelectedRow();
        if(fila!=-1){
            cargarDdatosFormularioDeTabla(fila);
            // activamos boton eliminar
            this.bEliminar.setEnabled(true);
        } 
    }//GEN-LAST:event_tablaJuegosMouseClicked

    private void bSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSalvarActionPerformed
        // TODO add your handling code here:
        salvarJuego();
    }//GEN-LAST:event_bSalvarActionPerformed

    private void bModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bModificarActionPerformed
        // TODO add your handling code here:
        modificarJuego();
    }//GEN-LAST:event_bModificarActionPerformed

    private void bEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEliminarActionPerformed
        // TODO add your handling code here:
        eliminarJuego();
    }//GEN-LAST:event_bEliminarActionPerformed

    private void tPecioJuegoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tPecioJuegoFocusLost
        // TODO add your handling code here:
        validarPrecio();
    }//GEN-LAST:event_tPecioJuegoFocusLost

    private void tPecioJuegoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tPecioJuegoKeyTyped
        // TODO add your handling code here:
         activarBotonesNuevo();
    }//GEN-LAST:event_tPecioJuegoKeyTyped

    /**
     * @param args the command line arguments
     */
 

    private void prepararVentana() {
        this.setTitle("Gestión de Juegos");
        this.anterior.setVisible(false);
        this.setVisible(true);
        this.ponerIconoVentana();
        this.setLocationRelativeTo(null); // Centramos
        ponerFotoJuego("juego.jpg");
        
        ponerIconos();
       
       // Todos os botones false
       this.bSalvar.setEnabled(false);
       this.bModificar.setEnabled(false);
       this.bEliminar.setEnabled(false);
       this.calendarFechaJuego.setDate(new Date());
       
       
       
       // Cargamos alumnos
       cargarTablaJuegos("");
    }
    
    private void ponerIconoVentana() {
        Utilidad c = Utilidad.nuevaInstancia();
        Toolkit t = Toolkit.getDefaultToolkit();
        this.setIconImage(t.getImage(c.getPatImagenes()+"icono.png"));
    }
    
    private void ponerFotoJuego(String foto) {
        Utilidad c = Utilidad.nuevaInstancia();
               
        //Ponemos el icono como imagen en el boton
        ImageIcon imageIcon = new ImageIcon(new ImageIcon(c.getPathFotosJuegos()+foto).getImage().getScaledInstance(100, 100, Image.SCALE_DEFAULT));
        this.bFoto.setIcon(imageIcon);
        this.iConoFoto = foto;
    }
    
    private void ponerIconos() {
        Utilidad c = Utilidad.nuevaInstancia();
        //Ponemos el icono como imagen label
        ImageIcon imageIcon = new ImageIcon(new ImageIcon(c.getPatImagenes()+"limpiar.png").getImage().getScaledInstance(30, 30, Image.SCALE_DEFAULT));
        this.bLimpiar.setIcon(imageIcon);
        
        imageIcon = new ImageIcon(new ImageIcon(c.getPatImagenes()+"salvar.png").getImage().getScaledInstance(30, 30, Image.SCALE_DEFAULT));
        this.bSalvar.setIcon(imageIcon);
        
        imageIcon = new ImageIcon(new ImageIcon(c.getPatImagenes()+"modificar.png").getImage().getScaledInstance(30, 30, Image.SCALE_DEFAULT));
        this.bModificar.setIcon(imageIcon);
        
        imageIcon = new ImageIcon(new ImageIcon(c.getPatImagenes()+"eliminar.png").getImage().getScaledInstance(30, 30, Image.SCALE_DEFAULT));
        this.bEliminar.setIcon(imageIcon);
        
        imageIcon = new ImageIcon(new ImageIcon(c.getPatImagenes()+"buscar.png").getImage().getScaledInstance(30, 30, Image.SCALE_DEFAULT));
        this.bBuscar.setIcon(imageIcon);

    }

    private void cerrarVentana() {
        anterior.setVisible(true);
    }
    
    
    
    private void limpiarCampos() {
        this.ponerFotoJuego("juego.jpg");
        this.tNJuego.setText("");
        this.tNombreJuego.setText("");
        this.comboDistribuidor.setSelectedIndex(0);
        this.tPecioJuego.setText("");
        this.calendarFechaJuego.setDate(new Date());
        
       this.bSalvar.setEnabled(false);
       this.bModificar.setEnabled(false);
       this.bEliminar.setEnabled(false);
        
        
    }
    
    private void seleccionarFotoJuego() {
        //Seleccionamos la foto
        JFileChooser elegirRuta = new JFileChooser();
        elegirRuta.setDialogTitle("Selecciona el fichero de foto del juego"); 
        FileNameExtensionFilter filtroFichero=new FileNameExtensionFilter("JPG, PNG & GIF","jpg","png","gif");
        elegirRuta.setFileFilter(filtroFichero);
        int seleccion = elegirRuta.showOpenDialog(this);
        // Si pulsa guardar o aceptar
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            File fichero = elegirRuta.getSelectedFile();
            System.out.println("fichero " + fichero.getAbsolutePath());
            Utilidad c = Utilidad.nuevaInstancia();
            c.copiarFotoJuego(fichero);
            ponerFotoJuego(fichero.getName());
            
        }
    }
    
    private void cargarTablaJuegos(String filtro) {
        this.tablaJuegosModel=new TablaJuegosModel();
        
        tablaJuegos.setRowSelectionAllowed(true);
        tablaJuegos.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        this.tablaJuegos.setModel(tablaJuegosModel);
        this.tablaJuegosModel.setFila(Juego.listaJuegos(filtro));
    }
    
    private void activarBotonesNuevo() {
        this.bSalvar.setEnabled(true);
        int fila= this.tablaJuegos.getSelectedRow();
        if(fila>=0){
            this.bModificar.setEnabled(true);
            this.bEliminar.setEnabled(false);
        } 
        
    }
    
    private void cargarDdatosFormularioDeTabla(int fila) {
        this.tNJuego.setText(this.tablaJuegos.getValueAt(fila, 0).toString());
        this.tNombreJuego.setText(this.tablaJuegos.getValueAt(fila, 1).toString());
        this.comboDistribuidor.setSelectedItem(this.tablaJuegos.getValueAt(fila, 2).toString());
        //this.tDistribuidorJuego.setText(this.tablaJuegos.getValueAt(fila, 2).toString());
        this.tPecioJuego.setText(this.tablaJuegos.getValueAt(fila, 3).toString());
        this.calendarFechaJuego.setDate(new Date(this.tablaJuegos.getValueAt(fila, 4).toString()));
        this.ponerFotoJuego(this.tablaJuegos.getValueAt(fila, 5).toString());
    }
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bBuscar;
    private javax.swing.JButton bEliminar;
    private javax.swing.JButton bFoto;
    private javax.swing.JButton bLimpiar;
    private javax.swing.JButton bModificar;
    private javax.swing.JButton bSalvar;
    private com.toedter.calendar.JDateChooser calendarFechaJuego;
    private javax.swing.JComboBox<String> comboDistribuidor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lDistribuidorJuego;
    private javax.swing.JLabel lFechaJuego;
    private javax.swing.JLabel lNSocio;
    private javax.swing.JLabel lNombreJuego;
    private javax.swing.JLabel lTelefonoSocio;
    private javax.swing.JTextField tBuscarNombre;
    private javax.swing.JTextField tNJuego;
    private javax.swing.JTextField tNombreJuego;
    private javax.swing.JTextField tPecioJuego;
    private javax.swing.JTable tablaJuegos;
    // End of variables declaration//GEN-END:variables

    private void salvarJuego() {
        boolean correcto = comprobarDatos();
        if(correcto){
            Juego s = new Juego();
            s.setNombre(this.tNombreJuego.getText());
            //s.setDistribuidor(this.tDistribuidorJuego.getText());
            s.setDistribuidor(this.comboDistribuidor.getSelectedItem().toString());
            s.setPrecio(Float.parseFloat(this.tPecioJuego.getText()));
            s.setFoto(this.iConoFoto);
            //Sacamos la fecha y su formato
            Date d = this.calendarFechaJuego.getDate();
            String formato = this.calendarFechaJuego.getDateFormatString();
            SimpleDateFormat sf = new SimpleDateFormat(formato);
            //System.err.println(String.valueOf(sf.format(d)));
            s.setFecha(sf.format(d));
            s.insertarBD();
            JOptionPane.showMessageDialog(null, "Juego salvado correctamnete ","Salvado exitoso",JOptionPane.INFORMATION_MESSAGE);
            
            this.limpiarCampos();
            this.cargarTablaJuegos("");
            
        }else{
             JOptionPane.showMessageDialog(null, "Error al salvar Juego","Error de salvado",JOptionPane.ERROR_MESSAGE);
        }
        
    }

    private boolean comprobarDatos() {
        if(this.tNombreJuego.getText().length()>0)
            return true;
        else
            return false;
    }

    private void modificarJuego() {
        boolean correcto = comprobarDatos();
        if(correcto){
            Juego s = new Juego();
            s.setCodigo(Integer.parseInt(this.tNJuego.getText()));
            s.setNombre(this.tNombreJuego.getText());
            //s.setDistribuidor(this.tDistribuidorJuego.getText());
             s.setDistribuidor(this.comboDistribuidor.getSelectedItem().toString());
            s.setPrecio(Float.parseFloat(this.tPecioJuego.getText()));
            s.setFoto(this.iConoFoto);
            //Sacamos la fecha y su formato
            Date d = this.calendarFechaJuego.getDate();
            String formato = this.calendarFechaJuego.getDateFormatString();
            SimpleDateFormat sf = new SimpleDateFormat(formato);
            //System.err.println(String.valueOf(sf.format(d)));
            s.setFecha(sf.format(d));
             //Preguntamos si queremos cerrar
            int seleccion = JOptionPane.showConfirmDialog(null, "¿Realmente desea modificar este juego?", "Salir", JOptionPane.YES_NO_OPTION);
            if (seleccion == JOptionPane.YES_OPTION){
                s.modificarBD();
                JOptionPane.showMessageDialog(null, "Juego actualizado correctamnete ","Actualización exitosa",JOptionPane.INFORMATION_MESSAGE);
            
                this.cargarTablaJuegos("");
                this.limpiarCampos();
                this.bModificar.setEnabled(false);
            }
            
        }else{
             JOptionPane.showMessageDialog(null, "Error al actualizar Socio","Error de actualización",JOptionPane.ERROR_MESSAGE);
        }
    }

    private void eliminarJuego() {
            Juego s = new Juego();
            s.setCodigo(Integer.parseInt(this.tNJuego.getText()));
             //Preguntamos si queremos cerrar
            int seleccion = JOptionPane.showConfirmDialog(null, "¿Realmente desea modificar este juego?", "Salir", JOptionPane.YES_NO_OPTION);
            if (seleccion == JOptionPane.YES_OPTION){
                s.eliminarBD();
                JOptionPane.showMessageDialog(null, "Juego eliminado correctamnete ","Eliminación exitosa",JOptionPane.INFORMATION_MESSAGE);
           
                this.cargarTablaJuegos("");
                this.limpiarCampos();
                this.bEliminar.setEnabled(false);
            }

    }


    
    private void validarPrecio() {
        String precio = this.tPecioJuego.getText();
        Utilidad u = Utilidad.nuevaInstancia();
        if(!u.precioValido(precio)){
            JOptionPane.showMessageDialog(null, "El precio no es válido","Precio erróneo",JOptionPane.ERROR_MESSAGE);
            this.tPecioJuego.requestFocus();
        }
    }
    

}
